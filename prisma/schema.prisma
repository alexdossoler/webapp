generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(cuid())
  email         String          @unique
  name          String?
  password      String
  role          String          @default("user")
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  assignedLeads Lead[]
  statusChanges StatusHistory[]
}

model Lead {
  id                 String          @id @default(cuid())
  contactName        String
  contactEmail       String
  contactPhone       String?
  companyName        String?
  projectGoal        String
  projectDescription String?
  projectTimeline    String
  estimatedBudget    Int?
  projectScope       String
  attachments        String?         // JSON array of uploaded filenames
  status             LeadStatus      @default(new)
  source             String?
  assignedToId       String?
  notes              String?
  leadScore          Int?
  submissionId       String          @unique
  ipAddress          String?
  userAgent          String?
  createdAt          DateTime        @default(now())
  updatedAt          DateTime        @updatedAt
  assignedTo         User?           @relation(fields: [assignedToId], references: [id])
  statusHistory      StatusHistory[]

  @@map("leads")
}

model StatusHistory {
  id          String     @id @default(cuid())
  leadId      String
  from        LeadStatus
  to          LeadStatus
  note        String?
  changedById String?
  createdAt   DateTime   @default(now())
  changedBy   User?      @relation(fields: [changedById], references: [id])
  lead        Lead       @relation(fields: [leadId], references: [id], onDelete: Cascade)

  @@map("status_history")
}

enum LeadStatus {
  new
  contacted
  qualified
  proposal_sent
  won
  lost
}

enum PreferredContact {
  email
  phone
  either
}
